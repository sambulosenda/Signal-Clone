{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/SignalClone/screens/HomeScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Auth, DataStore } from 'aws-amplify';\nimport { UserChatRoom } from \"../src/models\";\nimport ChatRoomItem from \"../components/ChatRoomItem\";\nexport default function TabOneScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRooms = _useState2[0],\n      setChatRooms = _useState2[1];\n\n  useEffect(function () {\n    var fetchChatRooms = function fetchChatRooms() {\n      var userData, chatRooms;\n      return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userData = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(DataStore.query(UserChatRoom));\n\n            case 5:\n              chatRooms = _context.sent.filter(function (UserChatRoom) {\n                return UserChatRoom.user.id === userData.attributes.sub;\n              }).map(function (UserChatRoom) {\n                return UserChatRoom.chatroom;\n              });\n              setChatRooms(chatRooms);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchChatRooms();\n  }, []);\n\n  var logOut = function logOut() {\n    Auth.signOut();\n  };\n\n  return React.createElement(View, {\n    style: styles.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: chatRooms,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ChatRoomItem, {\n        chatRoom: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 35\n        }\n      });\n    },\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  page: {\n    backgroundColor: 'white',\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/admin/Documents/SignalClone/screens/HomeScreen.tsx"],"names":["React","useState","useEffect","Auth","DataStore","UserChatRoom","ChatRoomItem","TabOneScreen","chatRooms","setChatRooms","fetchChatRooms","currentAuthenticatedUser","userData","query","filter","user","id","attributes","sub","map","chatroom","logOut","signOut","styles","page","item","StyleSheet","create","backgroundColor","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAGA,SAASC,IAAT,EAAeC,SAAf,QAAgC,aAAhC;AACA,SAAmBC,YAAnB;AACA,OAAOC,YAAP;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,kBAAkCN,QAAQ,CAAa,EAAb,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEP,IAAI,CAACQ,wBAAL,EADF;;AAAA;AACfC,cAAAA,QADe;AAAA;AAAA,+CAGIR,SAAS,CAACS,KAAV,CAAgBR,YAAhB,CAHJ;;AAAA;AAGfG,cAAAA,SAHe,iBAIlBM,MAJkB,CAIX,UAAAT,YAAY;AAAA,uBAAIA,YAAY,CAACU,IAAb,CAAkBC,EAAlB,KAAyBJ,QAAQ,CAACK,UAAT,CAAoBC,GAAjD;AAAA,eAJD,EAKlBC,GALkB,CAKd,UAAAd,YAAY;AAAA,uBAAIA,YAAY,CAACe,QAAjB;AAAA,eALE;AAOrBX,cAAAA,YAAY,CAACD,SAAD,CAAZ;;AAPqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AASAE,IAAAA,cAAc;AACf,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAMW,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBlB,IAAAA,IAAI,CAACmB,OAAL;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEhB,SADP;AAEC,IAAA,UAAU,EAAE;AAAA,UAAGiB,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAFb;AAGC,IAAA,4BAA4B,EAAE,KAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF;AAYD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,IAAI,EAAE;AAFF;AADyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Text, Image, Pressable, View, StyleSheet, FlatList } from 'react-native';\nimport { Auth, DataStore } from 'aws-amplify';\nimport { ChatRoom, UserChatRoom } from '../src/models';\nimport ChatRoomItem from '../components/ChatRoomItem';\n\n\nexport default function TabOneScreen() {\n  const [chatRooms, setChatRooms] = useState<ChatRoom[]>([]);\n\n  useEffect(() => {\n    const fetchChatRooms = async () => {\n      const userData = await Auth.currentAuthenticatedUser();\n\n      const chatRooms = (await DataStore.query(UserChatRoom))\n        .filter(UserChatRoom => UserChatRoom.user.id === userData.attributes.sub)\n        .map(UserChatRoom => UserChatRoom.chatroom);\n\n      setChatRooms(chatRooms);\n    };\n    fetchChatRooms();\n  }, []);\n\n  const logOut = () => {\n    Auth.signOut();\n  }\n\n  return (\n    <View style={styles.page}>\n       <FlatList \n        data={chatRooms}\n        renderItem={({ item }) => <ChatRoomItem chatRoom={item} />}\n        showsVerticalScrollIndicator={false}\n      />\n      {/* <Pressable onPress={logOut} style={{backgroundColor: 'red', height: 50, margin: 10, borderRadius: 50, alignItems: 'center', justifyContent: 'center'}}>\n        <Text>Logout</Text>\n      </Pressable> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: 'white',\n    flex: 1\n  }\n});"]},"metadata":{},"sourceType":"module"}
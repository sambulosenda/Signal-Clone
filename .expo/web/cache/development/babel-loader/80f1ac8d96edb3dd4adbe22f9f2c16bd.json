{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/SignalClone/components/ChatRoomItem/ChatRoomItem.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport styles from \"./styles\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { UserChatRoom, Message } from \"../../src/models\";\nexport default function ChatRoomItem(_ref) {\n  var chatRoom = _ref.chatRoom;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastMessage = _useState4[0],\n      setLastMessage = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var fetchedUsers, authUser;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(DataStore.query(UserChatRoom));\n\n            case 2:\n              fetchedUsers = _context.sent.filter(function (chatRoomUser) {\n                return chatRoomUser.chatroom.id === chatRoom.id;\n              }).map(function (chatRoomUser) {\n                return chatRoomUser.user;\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 5:\n              authUser = _context.sent;\n              setUser(fetchedUsers.find(function (user) {\n                return user.id !== authUser.attributes.sub;\n              }) || null);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  useEffect(function () {\n    if (!chatRoom.chatRoomLastMessageId) {\n      return;\n    }\n\n    DataStore.query(Message, chatRoom.chatRoomLastMessageId).then(setLastMessage);\n  }, []);\n\n  var onPress = function onPress() {\n    navigation.navigate(\"ChatRoom\", {\n      id: chatRoom.id\n    });\n  };\n\n  if (!user) {\n    return React.createElement(Tex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), !!chatRoom.newMessages && React.createElement(View, {\n    style: styles.badgeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.badgeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, chatRoom.newMessages)), React.createElement(View, {\n    style: styles.rightContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, user.name), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, lastMessage == null ? void 0 : lastMessage.createdAt)), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, lastMessage == null ? void 0 : lastMessage.content)));\n}","map":{"version":3,"sources":["/Users/admin/Documents/SignalClone/components/ChatRoomItem/ChatRoomItem.tsx"],"names":["React","useState","useEffect","useNavigation","styles","Auth","DataStore","UserChatRoom","Message","ChatRoomItem","chatRoom","user","setUser","lastMessage","setLastMessage","navigation","fetchUsers","query","fetchedUsers","filter","chatRoomUser","chatroom","id","map","currentAuthenticatedUser","authUser","find","attributes","sub","chatRoomLastMessageId","then","onPress","navigate","container","uri","imageUri","image","newMessages","badgeContainer","badgeText","rightContainer","row","name","text","createdAt","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, Image, View, Pressable, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport styles from \"./styles\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { UserChatRoom, User, Message } from \"../../src/models\";\n\nexport default function ChatRoomItem({ chatRoom }) {\n  //const [users, setUsers] = useState<User[]>([]);\n  const [user, setUser] = useState<User | null>(null); // the display name of the user\n  const [lastMessage, setLastMessage] = useState<Message | undefined>();\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const fetchedUsers = (await DataStore.query(UserChatRoom))\n        .filter((chatRoomUser) => chatRoomUser.chatroom.id === chatRoom.id)\n        .map((chatRoomUser) => chatRoomUser.user);\n\n      const authUser = await Auth.currentAuthenticatedUser();\n      setUser(\n        fetchedUsers.find(user => user.id !== authUser.attributes.sub) || null\n      );\n    };\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    if (!chatRoom.chatRoomLastMessageId) {\n      return;\n    }\n    DataStore.query(Message, chatRoom.chatRoomLastMessageId).then(\n      setLastMessage\n    );\n  }, []);\n\n  const onPress = () => {\n\n    navigation.navigate(\"ChatRoom\", { id: chatRoom.id });\n  };\n\n  if (!user) {\n    return <Tex />;\n  }\n\n  return (\n    <Pressable onPress={onPress} style={styles.container}>\n      <Image source={{ uri: user.imageUri }} style={styles.image} />\n\n      {!!chatRoom.newMessages && (\n        <View style={styles.badgeContainer}>\n          <Text style={styles.badgeText}>{chatRoom.newMessages}</Text>\n        </View>\n      )}\n\n      <View style={styles.rightContainer}>\n        <View style={styles.row}>\n          <Text style={styles.name}>{user.name}</Text>\n          <Text style={styles.text}>{lastMessage?.createdAt}</Text>\n        </View>\n        <Text numberOfLines={1} style={styles.text}>\n          {lastMessage?.content}\n        </Text>\n      </View>\n    </Pressable>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
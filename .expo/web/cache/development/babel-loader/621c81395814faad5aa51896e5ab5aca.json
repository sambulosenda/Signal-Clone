{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/SignalClone/screens/HomeScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ChatRoomItem from \"../components/ChatRoomItem\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { useState, useEffect } from \"react\";\nimport { UserChatRoom } from \"../src/models\";\nexport default function TabOneScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRooms = _useState2[0],\n      setChatRooms = _useState2[1];\n\n  useEffect(function () {\n    var fetchChatRooms = function fetchChatRooms() {\n      var userData, chatRooms;\n      return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userData = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(DataStore.query(UserChatRoom));\n\n            case 5:\n              chatRooms = _context.sent.filter(function (chatRoomUser) {\n                return chatRoomUser.user.id === userData.attributes.sub;\n              }).map(function (chatRoomUser) {\n                return chatRoomUser.chatroom;\n              });\n              setChatRooms(chatRooms);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchChatRooms();\n  }, []);\n\n  var logout = function logout() {\n    Auth.signOut();\n  };\n\n  return React.createElement(View, {\n    style: styles.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: chatRooms,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ChatRoomItem, {\n        chatRoom: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 35\n        }\n      });\n    },\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }), React.createElement(Pressable, {\n    onPress: logout,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Sign out\")));\n}\nvar styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"white\",\n    flex: 1\n  },\n  button: {\n    backgroundColor: \"red\",\n    marginBottom: 20,\n    marginHorizontal: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/admin/Documents/SignalClone/screens/HomeScreen.tsx"],"names":["React","ChatRoomItem","Auth","DataStore","useState","useEffect","UserChatRoom","TabOneScreen","chatRooms","setChatRooms","fetchChatRooms","currentAuthenticatedUser","userData","query","filter","chatRoomUser","user","id","attributes","sub","map","chatroom","logout","signOut","styles","page","item","button","text","StyleSheet","create","backgroundColor","flex","marginBottom","marginHorizontal","paddingVertical","paddingHorizontal","alignItems","borderRadius","fontWeight","color","fontSize"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAGA,OAAOC,YAAP;AAEA,SAASC,IAAT,EAAeC,SAAf,QAAgC,aAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,YAAT;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,kBAAkCH,QAAQ,CAAa,EAAb,CAA1C;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,YAAlB;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACER,IAAI,CAACS,wBAAL,EADF;;AAAA;AACfC,cAAAA,QADe;AAAA;AAAA,+CAGIT,SAAS,CAACU,KAAV,CAAgBP,YAAhB,CAHJ;;AAAA;AAGfE,cAAAA,SAHe,iBAIlBM,MAJkB,CAIX,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,IAAb,CAAkBC,EAAlB,KAAyBL,QAAQ,CAACM,UAAT,CAAoBC,GAAjD;AAAA,eAJD,EAKlBC,GALkB,CAKd,UAAAL,YAAY;AAAA,uBAAIA,YAAY,CAACM,QAAjB;AAAA,eALE;AAOrBZ,cAAAA,YAAY,CAACD,SAAD,CAAZ;;AAPqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AASAE,IAAAA,cAAc;AACf,GAXQ,EAWN,EAXM,CAAT;;AAcA,MAAMY,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBpB,IAAAA,IAAI,CAACqB,OAAL;AACD,GAFD;;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AACG,IAAA,IAAI,EAAEjB,SADT;AAEG,IAAA,UAAU,EAAE;AAAA,UAAGkB,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAFf;AAGG,IAAA,4BAA4B,EAAE,KAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEJ,MAApB;AAA4B,IAAA,KAAK,EAAEE,MAAM,CAACG,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAPF,CADF;AAaD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADyB;AAK/BL,EAAAA,MAAM,EAAE;AACNI,IAAAA,eAAe,EAAE,KADX;AAENE,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,gBAAgB,EAAE,EAHZ;AAINC,IAAAA,eAAe,EAAE,EAJX;AAKNC,IAAAA,iBAAiB,EAAE,EALb;AAMNC,IAAAA,UAAU,EAAE,QANN;AAONC,IAAAA,YAAY,EAAE;AAPR,GALuB;AAc/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,QAAQ,EAAE;AAHN;AAdyB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\n\nimport { Text, View, StyleSheet, FlatList, Pressable } from \"react-native\";\nimport ChatRoomItem from \"../components/ChatRoomItem\";\n\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { useState, useEffect } from \"react\";\nimport { ChatRoom } from \"../src/models\";\nimport { UserChatRoom } from \"../src/models\";\n\nexport default function TabOneScreen() {\n  const [chatRooms, setChatRooms] = useState<ChatRoom[]>([]);\n\n  useEffect(() => {\n    const fetchChatRooms = async () => {\n      const userData = await Auth.currentAuthenticatedUser();\n\n      const chatRooms = (await DataStore.query(UserChatRoom ))\n        .filter(chatRoomUser => chatRoomUser.user.id === userData.attributes.sub)\n        .map(chatRoomUser => chatRoomUser.chatroom);\n\n      setChatRooms(chatRooms);\n    };\n    fetchChatRooms();\n  }, []);\n\n  \n  const logout = () => {\n    Auth.signOut();\n  };\n  return (\n    <View style={styles.page}>\n     <FlatList\n        data={chatRooms}\n        renderItem={({ item }) => <ChatRoomItem chatRoom={item} />}\n        showsVerticalScrollIndicator={false}\n      />\n\n      <Pressable onPress={logout} style={styles.button}>\n        <Text style={styles.text}>Sign out</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n  button: {\n    backgroundColor: \"red\",\n    marginBottom: 20,\n    marginHorizontal: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    borderRadius: 10,\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/SignalClone/components/UserItem/UserItem.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from '@react-navigation/core';\nimport styles from \"./styles\";\nimport { Auth, DataStore } from 'aws-amplify';\nimport { UserChatRoom } from \"../../src/models\";\nexport default function UserItem(_ref) {\n  var user = _ref.user;\n  var navigation = useNavigation();\n\n  var onPress = function onPress() {\n    var authUser;\n    return _regeneratorRuntime.async(function onPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 2:\n            authUser = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(DataStore.save(new UserChatRoom({\n              user: dbUser,\n              chatroom: newChatRoom\n            })));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(DataStore.save(new UserChatRoom({\n              user: user,\n              chatroom: newChatRoom\n            })));\n\n          case 7:\n            navigation.navigate('ChatRoom', {\n              id: newChatRoom.id\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.rightContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, user.name))));\n}","map":{"version":3,"sources":["/Users/admin/Documents/SignalClone/components/UserItem/UserItem.tsx"],"names":["React","useNavigation","styles","Auth","DataStore","UserChatRoom","UserItem","user","navigation","onPress","currentAuthenticatedUser","authUser","save","dbUser","chatroom","newChatRoom","navigate","id","container","uri","imageUri","image","rightContainer","row","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,MAAP;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,aAAhC;AACA,SAAyBC,YAAzB;AAEA,eAAe,SAASC,QAAT,OAA4B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAEzC,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AAEA,MAAMQ,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CASSN,IAAI,CAACO,wBAAL,EATT;;AAAA;AASRC,YAAAA,QATQ;AAAA;AAAA,6CAWRP,SAAS,CAACQ,IAAV,CAAe,IAAIP,YAAJ,CAAiB;AACpCE,cAAAA,IAAI,EAAEM,MAD8B;AAEpCC,cAAAA,QAAQ,EAAEC;AAF0B,aAAjB,CAAf,CAXQ;;AAAA;AAAA;AAAA,6CAiBRX,SAAS,CAACQ,IAAV,CAAe,IAAIP,YAAJ,CAAiB;AACpCE,cAAAA,IAAI,EAAJA,IADoC;AAEpCO,cAAAA,QAAQ,EAAEC;AAF0B,aAAjB,CAAf,CAjBQ;;AAAA;AAqBdP,YAAAA,UAAU,CAACQ,QAAX,CAAoB,UAApB,EAAgC;AAAEC,cAAAA,EAAE,EAAEF,WAAW,CAACE;AAAlB,aAAhC;;AArBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAyBA,SACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAER,OAApB;AAA6B,IAAA,KAAK,EAAEP,MAAM,CAACgB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEZ,IAAI,CAACa;AAAZ,KAAf;AAAsC,IAAA,KAAK,EAAElB,MAAM,CAACmB,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BjB,IAAI,CAACiB,IAAhC,CADF,CADF,CAFF,CADF;AAWD","sourcesContent":["import React from 'react';\nimport { Text, Image, View, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport styles from './styles';\nimport { Auth, DataStore } from 'aws-amplify';\nimport { ChatRoom, User, UserChatRoom } from '../../src/models';\n\nexport default function UserItem({ user }) {\n\n  const navigation = useNavigation();\n\n  const onPress = async () => {\n    // TODO if there is already a chat room between these 2 users\n    // then redirect to the existing chat room\n    // otherwise, create a new chatroom with these users.\n\n    // Create a chat room\n   // const newChatRoom = await DataStore.save(new ChatRoom({newMessages: 0}));\n    \n    // connect authenticated user with the chat room\n    const authUser = await Auth.currentAuthenticatedUser();\n   // const dbUser = await DataStore.query(User, authUser.attributes.sub);\n    await DataStore.save(new UserChatRoom({\n      user: dbUser,\n      chatroom: newChatRoom\n    }))\n\n    // connect clicked user with the chat room\n    await DataStore.save(new UserChatRoom({\n      user,\n      chatroom: newChatRoom\n    }));\n    navigation.navigate('ChatRoom', { id: newChatRoom.id });\n  }\n\n\n  return (\n    <Pressable onPress={onPress} style={styles.container}>\n      <Image source={{ uri: user.imageUri}} style={styles.image} />\n      <View style={styles.rightContainer}>\n        <View style={styles.row}>\n          <Text style={styles.name}>{user.name}</Text>\n        </View>\n      </View>\n    </Pressable>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}
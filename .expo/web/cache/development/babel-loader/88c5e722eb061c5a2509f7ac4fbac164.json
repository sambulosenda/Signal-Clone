{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/SignalClone/screens/UsersScreen.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport UserItem from \"../components/UserItem\";\nimport { User } from \"../src/models\";\nexport default function UsersScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    DataStore.query(User).then(setUsers);\n  }, []);\n  return React.createElement(View, {\n    style: styles.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(UserItem, {\n        user: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 35\n        }\n      });\n    },\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"white\",\n    flex: 1\n  },\n  button: {\n    backgroundColor: \"red\",\n    marginBottom: 20,\n    marginHorizontal: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/admin/Documents/SignalClone/screens/UsersScreen.tsx"],"names":["React","useState","useEffect","DataStore","UserItem","User","UsersScreen","users","setUsers","query","then","styles","page","item","StyleSheet","create","backgroundColor","flex","button","marginBottom","marginHorizontal","paddingVertical","paddingHorizontal","alignItems","borderRadius","text","fontWeight","color","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAIA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,QAAP;AACA,SAASC,IAAT;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAEpC,kBAA0BL,QAAQ,CAAS,EAAT,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,SAAS,CAACM,KAAV,CAAgBJ,IAAhB,EAAsBK,IAAtB,CAA2BF,QAA3B;AACD,GAFQ,EAEN,EAFM,CAAT;AAcA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEL,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGM,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAFd;AAGE,IAAA,4BAA4B,EAAE,KAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADyB;AAK/BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,eAAe,EAAE,KADX;AAENG,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,gBAAgB,EAAE,EAHZ;AAINC,IAAAA,eAAe,EAAE,EAJX;AAKNC,IAAAA,iBAAiB,EAAE,EALb;AAMNC,IAAAA,UAAU,EAAE,QANN;AAONC,IAAAA,YAAY,EAAE;AAPR,GALuB;AAc/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,QAAQ,EAAE;AAHN;AAdyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Text, View, StyleSheet, FlatList, Pressable } from \"react-native\";\n\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport UserItem from \"../components/UserItem\";\nimport { User } from \"../src/models\";\n\nexport default function UsersScreen() {\n\n  const [users, setUsers] = useState<User[]>([]);\n \n  useEffect(() => {\n    DataStore.query(User).then(setUsers);\n  }, []);\n\n\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     const fetchedUsers = await DataStore.query(User);\n  //     setUsers(fetchedUsers);\n  //   };\n  //   fetchUsers();\n  // }, []);\n\n  return (\n    <View style={styles.page}>\n      <FlatList\n        data={users}\n        renderItem={({ item }) => <UserItem user={item} />}\n        showsVerticalScrollIndicator={false}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n  button: {\n    backgroundColor: \"red\",\n    marginBottom: 20,\n    marginHorizontal: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    borderRadius: 10,\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}